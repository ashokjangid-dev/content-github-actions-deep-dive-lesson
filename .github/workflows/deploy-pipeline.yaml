name: Deploy Lambda Function
on: [push]

jobs:

  lint:
    runs-on: ubuntu-latest
    steps: 
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install libraries
        run: pip install flake8
      - name: Lint with flake8
        run: |
            cd function
            flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
            flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install libraries
        run: |
            cd function
            python -m pip install --upgrade pip
            if [ -f requirements.txt ]; then pip install -r requirements.txt -t .; fi 
      - name: Zip bundle
        run: |
            cd function
            zip -r ../${{ github.sha }}.zip .
      - name: Archive artifact
        uses: actions/upload-artifact@v2
        with:
          name: zipped-bundle
          path: ${{ github.sha }}.zip
        
  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Create release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release from ${{ github.run_number }}
          body: New release for ${{ github.sha }}. Release notes on the documentation site
          draft: false
          prerelease: false
      - name: download artifact
        uses: actions/download-artifact@v2
        with:
          name: zipped-bundle
      - name: upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./${{ github.sha }}.zip
          asset_name: source_code_with_libraries.zip
          asset_content_type: application/zip
  install-aws-cli:
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - name: Uninstall AWS CLI
        run: |
          sudo rm /usr/local/bin/aws
          sudo rm /usr/local/bin/aws_completer
          sudo rm -rf /usr/local/aws-cli
      - name: Download AWS CLI
        run: curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      - name: Unzip AWS CLI
        run: unzip awscliv2.zip
      - name: Install AWS CLI
        run: sudo ./aws/install
      - name: Configure AWS CLI
        run: |
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          export AWS_DEFAULT_REGION=${{ env.AWS_REGION }}
      - name: Configure AWS CLI Community Action
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
  documentation:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: create docs folder
        run: mkdir docs
      - name: convert md to html
        uses: docker://pandoc/core:2.9
        with:
          args: uerguide.md -t html -o docs /index.html
      - name: deploy site
        uses: JamesIves/github-pages-deploy-pages@4.1.4
        with:
          folder: docs
          branch: gh-pages
          
